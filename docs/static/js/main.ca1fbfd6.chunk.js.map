{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/login.js","ui/NavBar.js","helpers/idioma.js","components/calendar/CalendarEvent.js","actions/uiAct.js","helpers/prepararEventos.js","actions/calendarAct.js","components/calendar/CalendarModal.js","ui/BtonAgregar.js","ui/BotonBorrar.js","components/calendar/CalndarScreen.js","router/RutaPrivada.js","router/RutaPublica.js","router/AppRouter.js","reducers/calndarReducer.js","store/store.js","reducers/uiReducer.js","reducers/authReducer.js","CalendarioApp.js","index.js"],"names":["baseURL","process","REACT_APP_API_URL","fetchsinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchconToken","token","localStorage","getItem","types","login","user","type","payload","register","cancelarChecking","logout","limpiarEventos","useForm","valoresIniciales","useState","valores","setvalores","cambioInput","e","target","name","value","reset","Login","dispatch","useDispatch","lEmail","lPassword","formLoginValues","RName","REmail","RPassword","RPassword2","formRegisterValues","cambioInputRegister","className","onSubmit","email","password","preventDefault","a","respuesta","json","ok","setItem","Date","getTime","uid","Swal","fire","title","icon","placeholder","onChange","NavBar","useSelector","state","auth","to","id","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","abrirModal","prepararEventos","eventos","map","evento","end","moment","toDate","start","CargaEventos","agregarEvento","actualizarEvento","eliminarEvento","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","fechaInicio","minutes","seconds","add","fechaFinal","clone","CalendarModal","diaInicio","setdiaInicio","diaFin","setdiaFin","modalOpen","ui","eventoActivo","calendario","notes","setValores","useEffect","cerrarModalBoton","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","trim","length","isSameOrAfter","console","log","getState","_id","agregarEventoAsincrono","minDate","autoComplete","rows","BtonAgregar","BotonBorrar","localizer","momentLocalizer","locale","CalndarScreen","vistaActual","setVistaActual","events","startAccessor","endAccessor","eventPropGetter","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onView","onSelectEvent","view","components","RutaPrivada","isAuth","Component","component","res","props","RutaPublica","AppRouter","checking","exact","path","valoresInciales","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarioApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca1fbfd6.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchsinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nconst fetchconToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport  {\r\n    fetchsinToken,\r\n    fetchconToken\r\n}","export const types = {\r\n\r\n    // Modal\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n\r\n    // Eventos\r\n    activarEvento: '[evento] Activar',\r\n    agregarEvento: '[evento] Agregar',\r\n    borrarEvento: '[evento] Borrar',\r\n   actualizarEvento: '[evento] Actualizar',\r\n    limiparEvento: '[evento] Limpiar',\r\n    limiparEventosTotales: '[evento] Limpiar Eventos',\r\n\r\n    // Eventos Asincronos\r\n    activarEventoAincrono: '[evento Asincrono] Activar Asincrono',\r\n    agregarEventoAsincrono: '[evento Asincrono] Agregar Asincrono',\r\n    borrarEventoAsincrono: '[evento Asincrono] Borrar Asincrono',\r\n   actualizarEventoAsincrono: '[evento Asincrono] Actualizar Asincrono',\r\n    limiparEventoAsincrono: '[evento Asincrono] Limpiar Asincrono',\r\n    inicioCargaEventos: '[evento Asincrono] Inicio Carga',\r\n    CargaEventos: '[evento Asincrono]  Carga',\r\n\r\n\r\n    // Auth\r\n    authChecking: '[auth] Checking',\r\n    authCheckingFinish: '[auth] Finish Checking',\r\n    usuarioLogin: '[auth] Login',\r\n    usuarioLoginFinish: '[auth] Login Finish',\r\n    usuarioRegistrado: '[auth] Registrado',\r\n    usuarioRenovarToken: '[auth] Renovar Token',\r\n    usuarioLogout: '[auth] Logout',\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchconToken, fetchsinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchsinToken('auth/auth', { email, password }, 'POST')\r\n        const body = await respuesta.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-fecha', new Date().getTime())\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire({\r\n                title: 'Error, No existe ese Usuario',\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const respuesta = await fetchsinToken('auth/new', {name, email, password}, 'POST')\r\n        const body = await respuesta.json()\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-fecha', new Date().getTime())\r\n            dispatch(register({\r\n                uid: body.uid,\r\n                name:body.name\r\n            }))\r\n\r\n        }else {\r\n            Swal.fire({\r\n                title: 'Ese usuario ya existe',\r\n                icon: 'error'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n}\r\nconst login = (user) => ({\r\n    type: types.usuarioLogin,\r\n    payload: user\r\n})\r\n\r\nconst register = (user) => ({\r\n    type: types.usuarioRegistrado,\r\n    payload: user\r\n})\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n    const respuesta = await fetchconToken('auth/renew')\r\n        const body = await respuesta.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token)\r\n            localStorage.setItem('token-fecha', new Date().getTime())\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n\r\n        }else{\r\n            dispatch(cancelarChecking())\r\n        }\r\n    }\r\n}\r\n\r\nconst cancelarChecking = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nexport const limpiar = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout())\r\n        dispatch(limpiarEventos())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.usuarioLogout\r\n})\r\n\r\nconst limpiarEventos = () => ({\r\n    type: types.limiparEventosTotales\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n    const [valores, setvalores] = useState(valoresIniciales)\r\n\r\n    \r\n    const cambioInput = (e) => {\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const reset = () => {\r\n        setvalores(valoresIniciales)\r\n    }\r\n    return [valores, cambioInput, setvalores, reset]\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport Swal from 'sweetalert2'\r\nimport { startLogin, startRegister } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n    const [formLoginValues, cambioInput] = useForm({\r\n        lEmail: 'oscara9a@gmail.com',\r\n        lPassword: 'a1b2c3'\r\n      \r\n    })\r\n\r\n    const [formRegisterValues, cambioInputRegister] = useForm({\r\n        RName: 'Oscar',\r\n        REmail: 'oscara9a@gmail.com',\r\n        RPassword: 'a1b2c3',\r\n        RPassword2: 'a1b2c3',\r\n      \r\n    })\r\n\r\n    const enviarLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const enviarRegistro = (e) => {\r\n        e.preventDefault();\r\n        if(RPassword !== RPassword2){\r\n            return Swal.fire({\r\n                title: 'Las contraseñas no coinciden',\r\n                icon: 'error'\r\n            })\r\n        }\r\n        dispatch(startRegister(RName,REmail, RPassword))\r\n    }\r\n\r\n    const {lEmail, lPassword} = formLoginValues\r\n    const {RName, REmail, RPassword, RPassword2} = formRegisterValues\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={enviarLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={cambioInput}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mt-3\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={cambioInput}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={enviarRegistro}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"RName\"\r\n                                value={RName}\r\n                                onChange={cambioInputRegister}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control mt-3\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"REmail\"\r\n                                value={REmail}\r\n                                onChange={cambioInputRegister}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mt-3\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"RPassword\"\r\n                                value={RPassword}\r\n                                onChange={cambioInputRegister}\r\n                                \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control mt-3\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"RPassword2\"\r\n                                value={RPassword2}\r\n                                onChange={cambioInputRegister} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit mt-3\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { limpiar } from '../actions/auth'\r\n\r\nexport const NavBar = () => {\r\n  const {name} = useSelector(state => state.auth)\r\n  const dispatch = useDispatch()\r\n  const cerrarSesion =() => {\r\n    dispatch(limpiar())\r\n\r\n  }\r\n \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"#\">{name}</Link>\r\n          <div id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n               <button className=\"btn btn-danger\" onClick={cerrarSesion}>Cerrar Sesión</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n","\r\nexport const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n        <span>{title}</span>\r\n        <strong> -{user.name}</strong>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const abrirModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const cerrarModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import moment from \"moment\"\r\n\r\nexport const prepararEventos = (eventos = []) => {\r\n     return eventos.map(evento => {\r\n         return {\r\n             ...evento,\r\n             end: moment(evento.end).toDate(),\r\n             start: moment(evento.start).toDate(),\r\n         }\r\n\r\n     })\r\n}","import { fetchconToken } from \"../helpers/fetch\";\r\nimport { prepararEventos } from \"../helpers/prepararEventos\";\r\nimport { types } from \"../types/types\";\r\n\r\n// Eventos Asincronos\r\nexport const agregarEventoAsincrono = (evento) => {\r\n    return async (dispatch, getState) => {\r\n        const {name, uid} = getState().auth\r\n     \r\n        try {\r\n            const respuesta = await fetchconToken('eventos', evento, 'POST')\r\n        const body = await respuesta.json()\r\n        if (body.ok) {\r\n            evento.id = body.evento.id\r\n            evento.user = {\r\n                _id: uid,\r\n                name\r\n            }\r\n            console.log(evento)\r\n            dispatch(agregarEvento(evento)) \r\n        }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const inicioCargaEventos = () => {\r\n    return async(dispatch) => {\r\n        const respuesta = await fetchconToken('eventos', {}, 'GET')\r\n        const body = await respuesta.json()\r\n        if(body.ok){\r\n            const eventos = prepararEventos(body.eventos)\r\n            dispatch(CargaEventos(eventos))\r\n        }\r\n    }\r\n}\r\n\r\nexport const inicioActualizarEvento = (evento) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const respuesta = await fetchconToken(`eventos/${evento.id}`, evento, 'PUT')\r\n            const body = await respuesta.json()\r\n            if(body.ok){\r\n                dispatch(actualizarEvento(evento))\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const inicioBorrarEvento = () => {\r\n    return async(dispatch, getState) => {\r\n        const {eventoActivo} = getState().calendario\r\n        try {\r\n            const respuesta = await fetchconToken(`eventos/${eventoActivo.id}`, {}, 'DELETE')\r\n            const body = await respuesta.json()\r\n            if(body.ok){\r\n                dispatch(eliminarEvento())\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\n// Sincronos\r\n\r\nconst CargaEventos = (eventos) => ({\r\n    type: types.CargaEventos,\r\n    payload: eventos\r\n})\r\n\r\nexport const activarEvento = (evento) => ({\r\n    type: types.activarEvento,\r\n    payload: evento\r\n\r\n})\r\n\r\nexport const limpiarEvento = () => ({\r\n    type: types.limiparEvento\r\n})\r\n\r\n\r\nexport const agregarEvento = (evento) => ({\r\n    type: types.agregarEvento,\r\n    payload: evento\r\n})\r\n\r\n\r\nexport const actualizarEvento = (evento) => ({\r\n    type: types.actualizarEvento,\r\n    payload: evento\r\n})\r\n\r\nexport const eliminarEvento = () => ({\r\n    type: types.borrarEvento\r\n})\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cerrarModal } from '../../actions/uiAct';\r\nimport DateTimePicker from 'react-datetime-picker'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { agregarEventoAsincrono, inicioActualizarEvento, limpiarEvento } from '../../actions/calendarAct';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\nconst fechaInicio = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst fechaFinal = fechaInicio.clone().add(1, 'hours')\r\n\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch()\r\n    const [diaInicio, setdiaInicio] = useState(fechaInicio.toDate());\r\n    const [diaFin, setdiaFin] = useState(fechaFinal.toDate());\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { eventoActivo } = useSelector(state => state.calendario)\r\n\r\n    const [valores, cambioInput, setValores, reset] = useForm({\r\n        start: fechaInicio.toDate(),\r\n        end: fechaFinal.toDate(),\r\n        title: '',\r\n        notes: '',\r\n        user: {\r\n            id: 1234,\r\n            name: 'Oscar'\r\n        }\r\n    })\r\n    const { start, end, title, notes } = valores\r\n\r\n    useEffect(() => {\r\n        if (eventoActivo) {\r\n            setValores(eventoActivo)\r\n        } else {\r\n            setValores({\r\n                start: fechaInicio.toDate(),\r\n                end: fechaFinal.toDate(),\r\n                title: '',\r\n                notes: '',\r\n                user: {\r\n                    id: 1234,\r\n                    name: 'Oscar'\r\n                }\r\n            })\r\n\r\n        }\r\n    }, [eventoActivo, setValores])\r\n\r\n    const cerrarModalBoton = (e) => {\r\n        dispatch(cerrarModal())\r\n        dispatch(limpiarEvento())\r\n        reset();\r\n    }\r\n\r\n    const cambioFechaInicio = (e) => {\r\n        setdiaInicio(e)\r\n        setValores({\r\n            ...valores,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const cambioFechaFinal = (e) => {\r\n        setdiaFin(e)\r\n        setValores({\r\n            ...valores,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const enviarForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n        if (title.trim().length < 2) {\r\n            return Swal.fire({\r\n                title: 'Titulo demasiado Corto',\r\n                icon: 'error'\r\n            })\r\n        }\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire({\r\n                title: 'La fecha de Incio debe de ser más temprano',\r\n                icon: 'error'\r\n            })\r\n\r\n        }\r\n        if (eventoActivo) {\r\n            dispatch(inicioActualizarEvento(valores))\r\n        } else {\r\n            dispatch(agregarEventoAsincrono(valores))\r\n        }\r\n\r\n        cerrarModalBoton();\r\n\r\n    }\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={cerrarModalBoton}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {eventoActivo ? 'Editar Evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={enviarForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    {/* {/* <input className=\"form-control\" placeholder=\"Fecha inicio\" /> */}\r\n\r\n                    <DateTimePicker\r\n                        onChange={cambioFechaInicio}\r\n                        value={diaInicio}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    {/* <input className=\"form-control\" placeholder=\"Fecha inicio\" /> */}\r\n                    <DateTimePicker\r\n                        onChange={cambioFechaFinal}\r\n                        minDate={diaInicio}\r\n                        value={diaFin}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={cambioInput}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={cambioInput}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block py-0 w-100 mt-2\"\r\n                >\r\n\r\n                    <span className=\"h5\">{eventoActivo ? 'Guardar Cambios' : 'Crear Evento'}</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { abrirModal } from '../actions/uiAct'\r\n\r\nexport const BtonAgregar = () => {\r\n    const dispatch = useDispatch()\r\n    const seleccionarBoton = () => {\r\n        dispatch(abrirModal())\r\n\r\n    }\r\n    return (\r\n        <button className=\"btn btn-primary rounded-circle contenido\" onClick={seleccionarBoton}>\r\n            <i className=\"fas fa-plus far\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { inicioBorrarEvento } from '../actions/calendarAct'\r\n\r\nexport const BotonBorrar = () => {\r\n    const dispatch = useDispatch()\r\n    const borrarEventoBoton = () => {\r\n        dispatch(inicioBorrarEvento())\r\n\r\n    }\r\n    return (\r\n        <button className=\"btn btn-danger borrar\"  onClick={borrarEventoBoton}>\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { NavBar } from '../../ui/NavBar'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport { messages } from '../../helpers/idioma'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { BtonAgregar } from '../../ui/BtonAgregar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activarEvento, inicioCargaEventos} from '../../actions/calendarAct'\r\nimport { abrirModal } from '../../actions/uiAct'\r\nimport { BotonBorrar } from '../../ui/BotonBorrar'\r\n\r\nconst localizer = momentLocalizer(moment)\r\nmoment.locale('es')\r\n\r\n// const events = [{\r\n//     title: 'Cumpleanos del jefe',\r\n//     cuerpo: 'LLevar Regalo',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     user: {\r\n//         id: 1234567,\r\n//         name: 'Oscar Ascencio'\r\n//     }\r\n// }]\r\n\r\nexport const CalndarScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const {eventos} = useSelector(state => state.calendario)\r\n    const {eventoActivo} = useSelector(state => state.calendario)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(inicioCargaEventos())\r\n    }, [dispatch])\r\n\r\n    const [vistaActual, setVistaActual] = useState(localStorage.getItem('VistaCalendar') || 'month')\r\n    const eventStyleGetter = (event) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : 'green',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: '#fff'\r\n        }\r\n    \r\n        return {\r\n            style\r\n        }\r\n    }\r\n    \r\n    const darDobleClick = (e) => {\r\n       dispatch(abrirModal())\r\n    }\r\n\r\n    const darunclick = (e)=> {\r\n        dispatch(activarEvento(e))\r\n    }\r\n    const ultimaVista = (e) =>{\r\n        setVistaActual(e)\r\n        localStorage.setItem(\"VistaCalendar\", e)\r\n    }\r\n    // const onSelectedSlod = (e) => {\r\n    //     dispatch(limpiarEvento())\r\n    // }\r\n    \r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            <Calendar\r\n            localizer={localizer}\r\n            events={eventos}\r\n            startAccessor=\"start\"\r\n            endAccessor=\"end\"\r\n            messages={messages}\r\n            eventPropGetter={eventStyleGetter}\r\n            onDoubleClickEvent={darDobleClick}\r\n            onView={ultimaVista}\r\n            // onSelectSlot={onSelectedSlod}\r\n            // selectable={true}\r\n            onSelectEvent={darunclick}\r\n            view={vistaActual}\r\n            components={\r\n                {\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal />\r\n            <BtonAgregar />\r\n            {\r\n                eventoActivo && <BotonBorrar />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const RutaPrivada = ({\r\n    isAuth,\r\n    component:Component,\r\n    ...res\r\n}) => {\r\n    return (\r\n        <Route {...res} component={props => isAuth ? <Component {...props}/> : <Redirect to=\"/login\"/>}/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const RutaPublica  = ({\r\n        isAuth,\r\n        component:Component,\r\n        ...res\r\n    }) => {\r\n        return (\r\n            <Route {...res} component={props => !isAuth ? <Component {...props}/> : <Redirect to=\"/\"/>}/>\r\n        )\r\n    }\r\n    ","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Redirect, Switch } from 'react-router-dom'\r\nimport { startChecking } from '../actions/auth'\r\nimport { Login } from '../components/auth/login'\r\nimport { CalndarScreen } from '../components/calendar/CalndarScreen'\r\nimport { RutaPrivada } from './RutaPrivada'\r\nimport { RutaPublica } from './RutaPublica'\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch()\r\n    const { checking } = useSelector(state => state.auth)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return ( \r\n            <h1>Esperando</h1>\r\n        )\r\n\r\n    } else {\r\n\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <RutaPrivada exact path=\"/\" component={CalndarScreen} isAuth={!!uid}/>\r\n                        <RutaPublica exact path=\"/login\" component={Login} isAuth={!!uid}/>\r\n                        <Redirect to=\"/login\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n // {\r\n    //     title: 'Cumpleanos del jefe',\r\n    //     cuerpo: 'LLevar Regalo',\r\n    //     start: moment().toDate(),\r\n    //     end: moment().add(2,'hours').toDate(),\r\n    //     id: Date.now(),\r\n    //     user: {\r\n    //         id: 1234567,\r\n    //         name: 'Oscar Ascencio'\r\n    //      }\r\n    // }\r\n\r\nconst valoresInciales = {\r\neventos: [], \r\neventoActivo: null\r\n}\r\n\r\nexport const calendarReducer = (state = valoresInciales, action) => {\r\n    switch (action.type) {\r\n        case types.activarEvento:\r\n            return {\r\n                ...state,\r\n                eventoActivo: action.payload\r\n            }\r\n        case types.limiparEvento:\r\n            return {\r\n                ...state,\r\n                eventoActivo: null\r\n            }\r\n        case types.agregarEvento:\r\n            return {\r\n                eventoActivo: null,\r\n                eventos: [...state.eventos, action.payload]\r\n            }\r\n        case types.actualizarEvento:\r\n            return {\r\n                ...state,\r\n                eventos: state.eventos.map(evento => (evento.id === action.payload.id ) ? action.payload : evento)\r\n            }\r\n        case types.borrarEvento:\r\n            return {\r\n                ...state,\r\n                eventos: state.eventos.filter(evento => evento.id !== state.eventoActivo.id),\r\n                eventoActivo: null\r\n            }\r\n        case types.CargaEventos:\r\n            return {\r\n                ...state,\r\n                eventos: action.payload\r\n            }\r\n        case types.limiparEventosTotales:\r\n            return {\r\n                ...valoresInciales,\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { calendarReducer } from '../reducers/calndarReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\tconst reducers = combineReducers({\r\n\t\tui: uiReducer,\r\n\t\tcalendario: calendarReducer,\r\n\t\tauth: authReducer,\r\n\t});\r\n\r\n\tconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\texport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiReducer = (state = {modalOpen: false}, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n            \r\n         \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = { checking: true }, action) => {\r\n    switch (action.type) {\r\n        case types.usuarioLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.usuarioRegistrado:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.usuarioLogout:\r\n            return { \r\n                checking:false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarioApp = () => {\r\n    return (\r\n        <Provider store={store}> \r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarioApp } from './CalendarioApp';\nimport './index.css';\n\nReactDOM.render(\n  <CalendarioApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}